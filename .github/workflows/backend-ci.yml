name: backend CI

on:
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'
          cache-dependency-path: backend/go.sum

      - name: cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: check Go formatting
        working-directory: ./backend
        run: |
          unformatted=$(gofmt -l .)
          if [ -n "$unformatted" ]; then
            echo "The following files are not formatted:"
            echo "$unformatted"
            echo "Please run 'gofmt -w .' to format your code"
            exit 1
          fi

      - name: download dependencies
        working-directory: ./backend
        run: go mod download

      - name: verify dependencies
        working-directory: ./backend
        run: go mod verify

      - name: run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: ./backend

      - name: run tests with race detector
        working-directory: ./backend
        run: go test -race -v ./...

      - name: build verification
        working-directory: ./backend
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          go build \
            -ldflags "-X 'backend/internal/version.commitSHA=$COMMIT_SHA' -X 'backend/internal/version.buildTime=$BUILD_TIME'" \
            -o bin/backend \
            ./cmd/server
          
          # verify the binary works
          ./bin/backend --help || echo "Binary built successfully"

      - name: check assets directory
        run: |
          if [ ! -d "backend/assets" ]; then
            echo "Warning: assets directory not found"
          else
            echo "Assets directory found with contents:"
            find backend/assets -type f | head -10
          fi